import{r,c as a,h as t}from"./index-D0o4bvBd.js";const s=o=>t("div",{class:`modus-radio-button ${o.disabled?"disabled":""}`},t("div",{class:`radio ${o.size}`,tabIndex:0,ref:o.ref,onClick:()=>o.handleButtonClick(o.id),onKeyDown:d=>o.handleKeydown(d,o.id)},t("input",{id:`radio-${o.id}`,checked:o.checked,disabled:o.disabled,name:o.name,type:"radio"}),t("span",{class:"checkmark"}),t("label",{htmlFor:`radio-${o.id}`},o.label))),n='div.modus-radio-group{display:flex;flex-direction:column;font-family:"Open Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";margin:0;padding:0;position:relative}.modus-radio-button{display:inline-block}.modus-radio-button .radio{align-items:center;display:inline-flex;height:2rem;outline:none}.modus-radio-button .radio input{display:none}.modus-radio-button .radio .checkmark{background-color:var(--modus-radio-btn-bg, #fff);border:0.125rem solid var(--modus-radio-btn-border-color, #90939f);border-radius:50%;height:0.75rem;position:absolute;transition:background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;width:0.75rem}.modus-radio-button .radio.small .checkmark{border:0.125rem solid var(--modus-radio-btn-border-color, #90939f);height:0.625rem;width:0.625rem}.modus-radio-button .radio.small input:checked~.checkmark::after{height:0.38rem;left:0.15rem;top:0.125rem;width:0.38rem}.modus-radio-button .radio.small:focus .checkmark{outline:0.125rem solid var(--modus-radio-btn-focus-color, #3db0ee);outline-offset:0.0625rem}.modus-radio-button .radio.small label{font-size:0.625rem;margin-left:1.25rem}.modus-radio-button .radio .checkmark::after{background:var(--modus-radio-btn-selected-border-color, #217cbb);border-radius:90%;content:"";display:none;forced-color-adjust:none;height:0.44rem;left:0.155rem;position:absolute;top:0.155rem;width:0.44rem}.modus-radio-button .radio input:checked~.checkmark{background-color:var(--modus-radio-btn-bg, #fff);border-color:var(--modus-radio-btn-selected-border-color, #217cbb)}.modus-radio-button .radio input:checked~.checkmark::after{display:block}.modus-radio-button .radio label{color:var(--modus-radio-btn-label-color, #464b52);font-size:0.75rem;margin-left:1.925rem}.modus-radio-button .radio:active .checkmark{background-color:var(--modus-radio-btn-selected-border-color, #217cbb);border-color:var(--modus-radio-btn-selected-border-color, #217cbb)}.modus-radio-button .radio:hover .checkmark{border-color:var(--modus-radio-btn-hover-border-color, #217cbb)}.modus-radio-button .radio:focus .checkmark{border-color:var(--modus-radio-btn-hover-border-color, #217cbb);outline:0.1875rem solid var(--modus-radio-btn-focus-color, #3db0ee);outline-offset:0.125rem}.modus-radio-button.disabled{opacity:var(--modus-radio-btn-disabled-opacity, 0.3);pointer-events:none}',c=n,l=class{constructor(o){r(this,o),this.buttonClick=a(this,"buttonClick"),this.radioButtonRefs=[],this.ariaLabel=void 0,this.checkedId=void 0,this.name=void 0,this.radioButtons=[],this.size="medium"}componentWillLoad(){this.radioButtons.forEach(o=>{this.checkedId=o.checked?o.id:this.checkedId})}handleButtonClick(o){this.setCheckedIdAndUpdateRadioButtons(o),this.buttonClick.emit(this.checkedId)}handleButtonKeydown(o,d){let e=this.radioButtons.findIndex(i=>i.id===d);o.code==="Enter"?this.handleButtonClick(d):o.code==="ArrowDown"?(e<this.radioButtons.length-1&&(e=e+1),this.handleButtonClick(this.radioButtons[e].id),this.radioButtonRefs[e].focus()):o.code==="ArrowUp"&&(e>0&&(e=e-1),this.handleButtonClick(this.radioButtons[e].id),this.radioButtonRefs[e].focus())}setCheckedIdAndUpdateRadioButtons(o){this.checkedId=o,this.radioButtons.forEach(d=>{d.checked=d.id===this.checkedId})}render(){return t("div",{key:"f739d67545febe34e1b7f1895aafa8b640d8a23f",class:"modus-radio-group","aria-label":this.ariaLabel},this.radioButtons.map((o,d)=>t(s,{ref:e=>this.radioButtonRefs[d]=e,size:this.size,checked:o.checked,disabled:o.disabled,label:o.label,name:this.name,id:o.id,handleButtonClick:e=>this.handleButtonClick(e),handleKeydown:(e,i)=>this.handleButtonKeydown(e,i)})))}static get watchers(){return{checkedId:["setCheckedIdAndUpdateRadioButtons"]}}};l.style=c;export{l as modus_radio_group};
